class Solution {
    public void gameOfLife(int[][] board) {
        int m = board.length;
        int n = board[0].length;
        int[][] grid = new int[m][n];
        for(int i=0; i<m; i++){
            Arrays.fill(grid[i], 0);
        }
        for(int i=0; i<m; i++){
            for(int j=0; j<n; j++){
                int lives = livesNeighbour(board, m, n, i, j);
                if(board[i][j] == 0 && lives == 3){
                    grid[i][j] = 1;
                }
                else if(board[i][j] == 1 && (lives<2 || lives>3)){
                    grid[i][j] = 0;
                }
                else if(board[i][j] == 1 && (lives==2 || lives==3)){
                    grid[i][j] = 1;
                }
            }
        }
            for(int i=0; i<m; i++){
                for(int j=0; j<n; j++){
                    board[i][j] = grid[i][j];
                }
            }
    }
        private int livesNeighbour(int[][] board, int m, int n, int i, int j){
            int lives = 0;
            for(int x = Math.max(0, i-1); x<=Math.min(m-1, i+1); x++){
                for(int y = Math.max(0, j-1); y<=Math.min(n-1, j+1); y++){
                    if(x == i && y == j){
                        continue;
                    }
                    if(board[x][y] == 1) lives++;
                }
            }
            return lives;
    }
}
