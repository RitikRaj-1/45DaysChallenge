class Solution {
    public int majorityElement(int[] nums) {
        // HashMap<Integer, Integer> hash = new HashMap<>();
        // for(int i: nums){
        //     hash.put(i, hash.getOrDefault(i, 0)+1);
        // }
        // int ans = -1;
        // for(Map.Entry<Integer, Integer> entry: hash.entrySet()){
        //     int key = entry.getKey();
        //     int value = entry.getValue();
        //     if(value > nums.length/2){
        //         ans = key;
        //         break;
        //     }
        // }
        // return ans;


//Moore voting algorithm - 

        int major = nums[0];
        int count = 0;
        int n = nums.length;
        for(int i=0; i<n; i++){
            if(nums[i] == major){
                count++;
                continue;
            }
            else count--;
            if(count == 0 && i<n-1){
                major = nums[i+1];
            }
        }
        int freqmajor = 0;
        for(int i: nums){
            if(i == major) freqmajor++;
        }
        return ((freqmajor > n/2) ? major : -1);
        
        return major;
    }
}
