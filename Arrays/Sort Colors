class Solution {
    public void sortColors(int[] nums) {
        // int twos = 0, ones=0, zeros=0;
        // for(int i: nums){
        //     if(i == 2) twos++;
        //     else if(i == 1) ones++;
        //     else zeros++;
        // }
        // for(int i=0; i<nums.length; i++){
        //     if(zeros != 0){
        //         nums[i] = 0;
        //         zeros--;
        //         continue;
        //     }
        //     else if(zeros == 0 && ones != 0){
        //         nums[i] = 1;
        //         ones--;
        //         continue;
        //     }
        //     else nums[i] = 2;
        // }


//***Dutch Flag Algorithm***

        int low=0, mid=0, high=nums.length-1;
        while(mid <= high){
            //making 0 to low-1 as 0
            if(nums[mid] == 0){
                swap(nums, low, mid);
                low++; mid++;
            }
            //making low to mid-1 as 1
            else if(nums[mid] == 1){
                mid++;
            }
            //making high+1 to n-1 as 2
            else{
                swap(nums, mid, high);
                high--;
            }
        }
    }
    public static void swap(int[] arr, int i, int j){
        int temp = arr[i];
        arr[i] = arr[j];
        arr[j] = temp;
    }
}
