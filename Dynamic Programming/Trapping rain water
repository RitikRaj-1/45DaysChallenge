class Solution {
    public int trap(int[] height) {
        int n = height.length;
        int[] leftmaxbound = new int[n];
        int[] rightmaxbound = new int[n];
        leftmaxbound[0] = height[0];
        for(int i = 1; i<n; i++){ 
            leftmaxbound [i] = Math.max(leftmaxbound[i-1], height[i]);;
        }
        rightmaxbound[n-1] = height[n-1];
        for(int i=n-2; i>=0; i--){
            rightmaxbound[i] = Math.max(rightmaxbound[i+1], height[i]);
        }
        int trappedwater = 0;
        for(int i=0; i<n; i++){
            trappedwater += (Math.min(leftmaxbound[i], rightmaxbound[i]) - height[i]);
        }
        return trappedwater;
    }
}
