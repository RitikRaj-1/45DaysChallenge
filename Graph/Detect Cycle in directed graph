class Solution {
    // Function to detect cycle in an undirected graph.
    public boolean isCyclic(int V, ArrayList<ArrayList<Integer>> adj) {
        // Code here
        int[] vis = new int[V];
        int[] pathvis = new int[V];
        for(int i=0; i<V; i++){
            if(vis[i] == 0) if(dfs(i, pathvis, vis, adj)) return true;
        }
        return false;
    }
    public boolean dfs(int node, int[] pathvis, int[] vis, ArrayList<ArrayList<Integer>> adj){
        vis[node] = 1;
        pathvis[node] = 1;
        
        for(int i: adj.get(node)){
            if(vis[i] == 0){
                if(dfs(i, pathvis, vis, adj)) return true;
            }
            else if(pathvis[i] == 1) return true;
        }
        pathvis[node] = 0;
        return false;
    }
}
