class Solution {
    public int[][] kClosest(int[][] points, int k) {
        PriorityQueue<int[]> pq = new PriorityQueue<>((a, b) -> 
            (b[0] * b[0] + b[1] * b[1]) - (a[0] * a[0] + a[1] * a[1])
        );
        int[][] ans = new int[k][2];
        for(int[] i: points){
            int x=i[0];
            int y=i[1];
            if(pq.size() < k){
                pq.offer(i);
            }
            else if((x*x + y*y) < (pq.peek()[0]*pq.peek()[0] + pq.peek()[1]*pq.peek()[1])){
                pq.offer(i);
                if(pq.size() > k) pq.poll();
            }
        }
        int i = 0;
        while(!pq.isEmpty()){
            ans[i] = pq.poll();
            i++;
        }
        return ans;
    }
}
