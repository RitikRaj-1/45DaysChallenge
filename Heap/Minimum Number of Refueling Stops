class Solution {
    public int minRefuelStops(int target, int start, int[][] stations) {
        // Arrays.sort(stations, (int[] a,int[] b) -> Integer.compare(a[0], b[0]));
        if(start > target) return 0;
        PriorityQueue<Integer> pq = new PriorityQueue<>(Collections.reverseOrder());
        int stops = 0;
        int n = stations.length;
        int maxdist = start;
        int i=0;

        while(maxdist < target){

            if(i<n && stations[i][0]<=maxdist){
                pq.add(stations[i][1]);
                i++;
            }

            else if(pq.isEmpty()) return -1;

            else{
                maxdist += pq.poll();
                stops++;
            }
        }
        return stops;
    }
}
