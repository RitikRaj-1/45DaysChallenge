/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public void flatten(TreeNode root) {
    //     ArrayList<Integer> arr = new ArrayList<>();
    //     preorder(root, arr);
        TreeNode curr = root;
    //     for(int i=1; i<arr.size(); i++){
    //         TreeNode temp = new TreeNode(arr.get(i));
    //         curr.right = temp;
    //         curr.left = null;
    //         curr = curr.right;
    //     }
    // }
    // private void preorder(TreeNode root, ArrayList<Integer> arr){
    //     if(root == null) return;

    //     arr.add(root.val);
    //     preorder(root.left, arr);
    //     preorder(root.right, arr);

    //     return;

    while(curr != null){
        if(curr.left != null){
            TreeNode rightest = curr.left;

            while(rightest.right != null){
                rightest = rightest.right;
            }

            rightest.right = curr.right;

            curr.right = curr.left;
            curr.left = null;
        }

        curr = curr.right;
    }
    }
}
