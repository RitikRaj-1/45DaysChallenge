/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int pathSum(TreeNode root, int targetSum) {
        if(root == null || root.val==1000000000) return 0;
        int roots = helper(root, targetSum);

        int leftroots = pathSum(root.left, targetSum);
        int rightroots = pathSum(root.right, targetSum);

        return roots+leftroots+rightroots;
    }
    private int helper(TreeNode root, int target){
        if(root == null) return 0;

        int ans=0;
        if(target==root.val){
            ans++;
        }
        ans+=helper(root.left, target-root.val);

        ans+=helper(root.right, target-root.val);
        return ans;
    }
}
