class Solution {
    public boolean isSubtree(TreeNode root, TreeNode subRoot) {
        return subTree(root, subRoot);
    }
    public boolean subTree(TreeNode root1, TreeNode root2){
        if(root1 == null) return false;
        if((root1.val == root2.val) && checkequal(root1, root2)){
            return true;
        }
        return subTree(root1.left, root2) || subTree(root1.right, root2);
    }
    public boolean checkequal(TreeNode root1, TreeNode root2){
        if(root1 == null && root2 == null) return true;
        if(root1 == null || root2 == null) return false;
        if(root1.val != root2.val) return false;

        return (checkequal(root1.left, root2.left) && checkequal(root1.right,  root2.right));
    }
